{"version":3,"sources":["../../node_modules/heap/lib/heap.js","../../node_modules/heap/index.js","../../AppData/Local/Yarn/Data/global/node_modules/object-assign/index.js","../../AppData/Local/Yarn/Data/global/node_modules/assert/node_modules/util/support/isBufferBrowser.js","../../AppData/Local/Yarn/Data/global/node_modules/assert/node_modules/inherits/inherits_browser.js","../../AppData/Local/Yarn/Data/global/node_modules/process/browser.js","../../AppData/Local/Yarn/Data/global/node_modules/assert/node_modules/util/util.js","../../AppData/Local/Yarn/Data/global/node_modules/assert/assert.js","difflib.js","app.js","../../AppData/Local/Yarn/Data/global/node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["getOwnPropertySymbols","Object","hasOwnProperty","prototype","propIsEnumerable","propertyIsEnumerable","toObject","val","undefined","TypeError","shouldUseNative","assign","test1","String","getOwnPropertyNames","test2","i","fromCharCode","order2","map","n","join","test3","split","forEach","letter","keys","err","module","exports","target","source","from","to","symbols","s","arguments","length","key","call","process","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","Error","defaultClearTimeout","setTimeout","e","clearTimeout","runTimeout","fun","runClearTimeout","marker","queue","draining","currentQueue","queueIndex","cleanUpNextTick","concat","drainQueue","timeout","len","run","nextTick","args","Array","push","Item","array","apply","title","env","argv","version","versions","noop","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","formatRegExp","format","f","isString","objects","inspect","str","replace","x","Number","JSON","stringify","_","isNull","isObject","deprecate","fn","msg","isUndefined","global","noDeprecation","warned","deprecated","throwDeprecation","traceDeprecation","console","trace","error","debugs","debugEnviron","debuglog","set","toUpperCase","RegExp","test","pid","obj","opts","ctx","seen","stylize","stylizeNoColor","depth","colors","isBoolean","showHidden","_extend","customInspect","stylizeWithColor","formatValue","styles","styleType","style","arrayToHash","hash","idx","value","recurseTimes","isFunction","constructor","ret","primitive","formatPrimitive","visibleKeys","isError","indexOf","formatError","isRegExp","toString","isDate","Date","base","braces","isArray","toUTCString","output","formatArray","formatProperty","pop","reduceToSingleString","simple","isNumber","l","match","desc","getOwnPropertyDescriptor","get","line","substr","numLinesEst","reduce","prev","cur","ar","arg","isNullOrUndefined","isSymbol","re","objectToString","d","isPrimitive","isBuffer","require","o","pad","months","timestamp","time","getHours","getMinutes","getSeconds","getDate","getMonth","log","inherits","origin","add","prop","Differ","Heap","IS_CHARACTER_JUNK","IS_LINE_JUNK","SequenceMatcher","_any","_arrayCmp","_calculateRatio","_countLeading","_formatRangeContext","_formatRangeUnified","_has","assert","contextDiff","floor","getCloseMatches","max","min","ndiff","restore","unifiedDiff","Math","matches","a","b","la","lb","ref","items","item","isjunk1","autojunk","isjunk","setSeqs","setSeq1","setSeq2","matchingBlocks","opcodes","fullbcount","_chainB","b2j","elt","idxs","indices","junk","len1","m","ntest","popular","isbjunk","isbpopular","alo","ahi","blo","bhi","besti","bestj","bestsize","j","j2len","k","newj2len","ref1","ref2","i1","i2","j1","j2","k1","k2","nonAdjacent","findLongestMatch","sort","ai","answer","bj","size","tag","getMatchingBlocks","codes","group","groups","nn","getOpcodes","avail","numb","word","possibilities","cutoff","result","results","score","realQuickRatio","quickRatio","ratio","nlargest","ch","linejunk1","charjunk1","linejunk","charjunk","cruncher","g","lines","_fancyReplace","_dump","lo","hi","first","second","aelt","ai1","ai2","atags","belt","bestRatio","bj1","bj2","btags","eqi","eqj","len2","len3","len4","p","q","r","ref3","ref4","ref5","ref6","ref7","ref8","t","_plainReplace","_fancyHelper","_qformat","aline","bline","common","slice","pat","ws","start","stop","beginning","fromfile","tofile","fromfiledate","tofiledate","lineterm","file1Range","file2Range","fromdate","last","started","todate","getGroupedOpcodes","prefix","insert","delete","equal","compare","delta","which","prefixes","difflib","OVERLAY_ID","OldModule","bundle","Module","moduleName","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","onmessage","event","parse","type","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","parcelRequire","id","every","generated","js","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","removeErrorOverlay","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","dep","Function","deps","cached","cache","some","cb"],"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","file":"app.c328ef1a.js","sourceRoot":"..","sourcesContent":["// Generated by CoffeeScript 1.8.0\n(function() {\n  var Heap, defaultCmp, floor, heapify, heappop, heappush, heappushpop, heapreplace, insort, min, nlargest, nsmallest, updateItem, _siftdown, _siftup;\n\n  floor = Math.floor, min = Math.min;\n\n\n  /*\n  Default comparison function to be used\n   */\n\n  defaultCmp = function(x, y) {\n    if (x < y) {\n      return -1;\n    }\n    if (x > y) {\n      return 1;\n    }\n    return 0;\n  };\n\n\n  /*\n  Insert item x in list a, and keep it sorted assuming a is sorted.\n  \n  If x is already in a, insert it to the right of the rightmost x.\n  \n  Optional args lo (default 0) and hi (default a.length) bound the slice\n  of a to be searched.\n   */\n\n  insort = function(a, x, lo, hi, cmp) {\n    var mid;\n    if (lo == null) {\n      lo = 0;\n    }\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (lo < 0) {\n      throw new Error('lo must be non-negative');\n    }\n    if (hi == null) {\n      hi = a.length;\n    }\n    while (lo < hi) {\n      mid = floor((lo + hi) / 2);\n      if (cmp(x, a[mid]) < 0) {\n        hi = mid;\n      } else {\n        lo = mid + 1;\n      }\n    }\n    return ([].splice.apply(a, [lo, lo - lo].concat(x)), x);\n  };\n\n\n  /*\n  Push item onto heap, maintaining the heap invariant.\n   */\n\n  heappush = function(array, item, cmp) {\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    array.push(item);\n    return _siftdown(array, 0, array.length - 1, cmp);\n  };\n\n\n  /*\n  Pop the smallest item off the heap, maintaining the heap invariant.\n   */\n\n  heappop = function(array, cmp) {\n    var lastelt, returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    lastelt = array.pop();\n    if (array.length) {\n      returnitem = array[0];\n      array[0] = lastelt;\n      _siftup(array, 0, cmp);\n    } else {\n      returnitem = lastelt;\n    }\n    return returnitem;\n  };\n\n\n  /*\n  Pop and return the current smallest value, and add the new item.\n  \n  This is more efficient than heappop() followed by heappush(), and can be\n  more appropriate when using a fixed size heap. Note that the value\n  returned may be larger than item! That constrains reasonable use of\n  this routine unless written as part of a conditional replacement:\n      if item > array[0]\n        item = heapreplace(array, item)\n   */\n\n  heapreplace = function(array, item, cmp) {\n    var returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    returnitem = array[0];\n    array[0] = item;\n    _siftup(array, 0, cmp);\n    return returnitem;\n  };\n\n\n  /*\n  Fast version of a heappush followed by a heappop.\n   */\n\n  heappushpop = function(array, item, cmp) {\n    var _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (array.length && cmp(array[0], item) < 0) {\n      _ref = [array[0], item], item = _ref[0], array[0] = _ref[1];\n      _siftup(array, 0, cmp);\n    }\n    return item;\n  };\n\n\n  /*\n  Transform list into a heap, in-place, in O(array.length) time.\n   */\n\n  heapify = function(array, cmp) {\n    var i, _i, _j, _len, _ref, _ref1, _results, _results1;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    _ref1 = (function() {\n      _results1 = [];\n      for (var _j = 0, _ref = floor(array.length / 2); 0 <= _ref ? _j < _ref : _j > _ref; 0 <= _ref ? _j++ : _j--){ _results1.push(_j); }\n      return _results1;\n    }).apply(this).reverse();\n    _results = [];\n    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n      i = _ref1[_i];\n      _results.push(_siftup(array, i, cmp));\n    }\n    return _results;\n  };\n\n\n  /*\n  Update the position of the given item in the heap.\n  This function should be called every time the item is being modified.\n   */\n\n  updateItem = function(array, item, cmp) {\n    var pos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    pos = array.indexOf(item);\n    if (pos === -1) {\n      return;\n    }\n    _siftdown(array, 0, pos, cmp);\n    return _siftup(array, pos, cmp);\n  };\n\n\n  /*\n  Find the n largest elements in a dataset.\n   */\n\n  nlargest = function(array, n, cmp) {\n    var elem, result, _i, _len, _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    result = array.slice(0, n);\n    if (!result.length) {\n      return result;\n    }\n    heapify(result, cmp);\n    _ref = array.slice(n);\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      elem = _ref[_i];\n      heappushpop(result, elem, cmp);\n    }\n    return result.sort(cmp).reverse();\n  };\n\n\n  /*\n  Find the n smallest elements in a dataset.\n   */\n\n  nsmallest = function(array, n, cmp) {\n    var elem, i, los, result, _i, _j, _len, _ref, _ref1, _results;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (n * 10 <= array.length) {\n      result = array.slice(0, n).sort(cmp);\n      if (!result.length) {\n        return result;\n      }\n      los = result[result.length - 1];\n      _ref = array.slice(n);\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        elem = _ref[_i];\n        if (cmp(elem, los) < 0) {\n          insort(result, elem, 0, null, cmp);\n          result.pop();\n          los = result[result.length - 1];\n        }\n      }\n      return result;\n    }\n    heapify(array, cmp);\n    _results = [];\n    for (i = _j = 0, _ref1 = min(n, array.length); 0 <= _ref1 ? _j < _ref1 : _j > _ref1; i = 0 <= _ref1 ? ++_j : --_j) {\n      _results.push(heappop(array, cmp));\n    }\n    return _results;\n  };\n\n  _siftdown = function(array, startpos, pos, cmp) {\n    var newitem, parent, parentpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    newitem = array[pos];\n    while (pos > startpos) {\n      parentpos = (pos - 1) >> 1;\n      parent = array[parentpos];\n      if (cmp(newitem, parent) < 0) {\n        array[pos] = parent;\n        pos = parentpos;\n        continue;\n      }\n      break;\n    }\n    return array[pos] = newitem;\n  };\n\n  _siftup = function(array, pos, cmp) {\n    var childpos, endpos, newitem, rightpos, startpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    endpos = array.length;\n    startpos = pos;\n    newitem = array[pos];\n    childpos = 2 * pos + 1;\n    while (childpos < endpos) {\n      rightpos = childpos + 1;\n      if (rightpos < endpos && !(cmp(array[childpos], array[rightpos]) < 0)) {\n        childpos = rightpos;\n      }\n      array[pos] = array[childpos];\n      pos = childpos;\n      childpos = 2 * pos + 1;\n    }\n    array[pos] = newitem;\n    return _siftdown(array, startpos, pos, cmp);\n  };\n\n  Heap = (function() {\n    Heap.push = heappush;\n\n    Heap.pop = heappop;\n\n    Heap.replace = heapreplace;\n\n    Heap.pushpop = heappushpop;\n\n    Heap.heapify = heapify;\n\n    Heap.updateItem = updateItem;\n\n    Heap.nlargest = nlargest;\n\n    Heap.nsmallest = nsmallest;\n\n    function Heap(cmp) {\n      this.cmp = cmp != null ? cmp : defaultCmp;\n      this.nodes = [];\n    }\n\n    Heap.prototype.push = function(x) {\n      return heappush(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pop = function() {\n      return heappop(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.peek = function() {\n      return this.nodes[0];\n    };\n\n    Heap.prototype.contains = function(x) {\n      return this.nodes.indexOf(x) !== -1;\n    };\n\n    Heap.prototype.replace = function(x) {\n      return heapreplace(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pushpop = function(x) {\n      return heappushpop(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.heapify = function() {\n      return heapify(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.updateItem = function(x) {\n      return updateItem(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.clear = function() {\n      return this.nodes = [];\n    };\n\n    Heap.prototype.empty = function() {\n      return this.nodes.length === 0;\n    };\n\n    Heap.prototype.size = function() {\n      return this.nodes.length;\n    };\n\n    Heap.prototype.clone = function() {\n      var heap;\n      heap = new Heap();\n      heap.nodes = this.nodes.slice(0);\n      return heap;\n    };\n\n    Heap.prototype.toArray = function() {\n      return this.nodes.slice(0);\n    };\n\n    Heap.prototype.insert = Heap.prototype.push;\n\n    Heap.prototype.top = Heap.prototype.peek;\n\n    Heap.prototype.front = Heap.prototype.peek;\n\n    Heap.prototype.has = Heap.prototype.contains;\n\n    Heap.prototype.copy = Heap.prototype.clone;\n\n    return Heap;\n\n  })();\n\n  (function(root, factory) {\n    if (typeof define === 'function' && define.amd) {\n      return define([], factory);\n    } else if (typeof exports === 'object') {\n      return module.exports = factory();\n    } else {\n      return root.Heap = factory();\n    }\n  })(this, function() {\n    return Heap;\n  });\n\n}).call(this);\n","module.exports = require('./lib/heap');\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n","'use strict';\n\nvar objectAssign = require('object-assign');\n\n// compare and isBuffer taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js\n// original notice:\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n  if (y < x) {\n    return 1;\n  }\n  return 0;\n}\nfunction isBuffer(b) {\n  if (global.Buffer && typeof global.Buffer.isBuffer === 'function') {\n    return global.Buffer.isBuffer(b);\n  }\n  return !!(b != null && b._isBuffer);\n}\n\n// based on node assert, original notice:\n// NB: The URL to the CommonJS spec is kept just for tradition.\n//     node-assert has evolved a lot since then, both in API and behavior.\n\n// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n//\n// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n//\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar util = require('util/');\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar pSlice = Array.prototype.slice;\nvar functionsHaveNames = (function () {\n  return function foo() {}.name === 'foo';\n}());\nfunction pToString (obj) {\n  return Object.prototype.toString.call(obj);\n}\nfunction isView(arrbuf) {\n  if (isBuffer(arrbuf)) {\n    return false;\n  }\n  if (typeof global.ArrayBuffer !== 'function') {\n    return false;\n  }\n  if (typeof ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(arrbuf);\n  }\n  if (!arrbuf) {\n    return false;\n  }\n  if (arrbuf instanceof DataView) {\n    return true;\n  }\n  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {\n    return true;\n  }\n  return false;\n}\n// 1. The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nvar assert = module.exports = ok;\n\n// 2. The AssertionError is defined in assert.\n// new assert.AssertionError({ message: message,\n//                             actual: actual,\n//                             expected: expected })\n\nvar regex = /\\s*function\\s+([^\\(\\s]*)\\s*/;\n// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js\nfunction getName(func) {\n  if (!util.isFunction(func)) {\n    return;\n  }\n  if (functionsHaveNames) {\n    return func.name;\n  }\n  var str = func.toString();\n  var match = str.match(regex);\n  return match && match[1];\n}\nassert.AssertionError = function AssertionError(options) {\n  this.name = 'AssertionError';\n  this.actual = options.actual;\n  this.expected = options.expected;\n  this.operator = options.operator;\n  if (options.message) {\n    this.message = options.message;\n    this.generatedMessage = false;\n  } else {\n    this.message = getMessage(this);\n    this.generatedMessage = true;\n  }\n  var stackStartFunction = options.stackStartFunction || fail;\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, stackStartFunction);\n  } else {\n    // non v8 browsers so we can have a stacktrace\n    var err = new Error();\n    if (err.stack) {\n      var out = err.stack;\n\n      // try to strip useless frames\n      var fn_name = getName(stackStartFunction);\n      var idx = out.indexOf('\\n' + fn_name);\n      if (idx >= 0) {\n        // once we have located the function frame\n        // we need to strip out everything before it (and its line)\n        var next_line = out.indexOf('\\n', idx + 1);\n        out = out.substring(next_line + 1);\n      }\n\n      this.stack = out;\n    }\n  }\n};\n\n// assert.AssertionError instanceof Error\nutil.inherits(assert.AssertionError, Error);\n\nfunction truncate(s, n) {\n  if (typeof s === 'string') {\n    return s.length < n ? s : s.slice(0, n);\n  } else {\n    return s;\n  }\n}\nfunction inspect(something) {\n  if (functionsHaveNames || !util.isFunction(something)) {\n    return util.inspect(something);\n  }\n  var rawname = getName(something);\n  var name = rawname ? ': ' + rawname : '';\n  return '[Function' +  name + ']';\n}\nfunction getMessage(self) {\n  return truncate(inspect(self.actual), 128) + ' ' +\n         self.operator + ' ' +\n         truncate(inspect(self.expected), 128);\n}\n\n// At present only the three keys mentioned above are used and\n// understood by the spec. Implementations or sub modules can pass\n// other keys to the AssertionError's constructor - they will be\n// ignored.\n\n// 3. All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided.  All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nfunction fail(actual, expected, message, operator, stackStartFunction) {\n  throw new assert.AssertionError({\n    message: message,\n    actual: actual,\n    expected: expected,\n    operator: operator,\n    stackStartFunction: stackStartFunction\n  });\n}\n\n// EXTENSION! allows for well behaved errors defined elsewhere.\nassert.fail = fail;\n\n// 4. Pure assertion tests whether a value is truthy, as determined\n// by !!guard.\n// assert.ok(guard, message_opt);\n// This statement is equivalent to assert.equal(true, !!guard,\n// message_opt);. To test strictly for the value true, use\n// assert.strictEqual(true, guard, message_opt);.\n\nfunction ok(value, message) {\n  if (!value) fail(value, true, message, '==', assert.ok);\n}\nassert.ok = ok;\n\n// 5. The equality assertion tests shallow, coercive equality with\n// ==.\n// assert.equal(actual, expected, message_opt);\n\nassert.equal = function equal(actual, expected, message) {\n  if (actual != expected) fail(actual, expected, message, '==', assert.equal);\n};\n\n// 6. The non-equality assertion tests for whether two objects are not equal\n// with != assert.notEqual(actual, expected, message_opt);\n\nassert.notEqual = function notEqual(actual, expected, message) {\n  if (actual == expected) {\n    fail(actual, expected, message, '!=', assert.notEqual);\n  }\n};\n\n// 7. The equivalence assertion tests a deep equality relation.\n// assert.deepEqual(actual, expected, message_opt);\n\nassert.deepEqual = function deepEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'deepEqual', assert.deepEqual);\n  }\n};\n\nassert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'deepStrictEqual', assert.deepStrictEqual);\n  }\n};\n\nfunction _deepEqual(actual, expected, strict, memos) {\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n  } else if (isBuffer(actual) && isBuffer(expected)) {\n    return compare(actual, expected) === 0;\n\n  // 7.2. If the expected value is a Date object, the actual value is\n  // equivalent if it is also a Date object that refers to the same time.\n  } else if (util.isDate(actual) && util.isDate(expected)) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3 If the expected value is a RegExp object, the actual value is\n  // equivalent if it is also a RegExp object with the same source and\n  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {\n    return actual.source === expected.source &&\n           actual.global === expected.global &&\n           actual.multiline === expected.multiline &&\n           actual.lastIndex === expected.lastIndex &&\n           actual.ignoreCase === expected.ignoreCase;\n\n  // 7.4. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if ((actual === null || typeof actual !== 'object') &&\n             (expected === null || typeof expected !== 'object')) {\n    return strict ? actual === expected : actual == expected;\n\n  // If both values are instances of typed arrays, wrap their underlying\n  // ArrayBuffers in a Buffer each to increase performance\n  // This optimization requires the arrays to have the same type as checked by\n  // Object.prototype.toString (aka pToString). Never perform binary\n  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their\n  // bit patterns are not identical.\n  } else if (isView(actual) && isView(expected) &&\n             pToString(actual) === pToString(expected) &&\n             !(actual instanceof Float32Array ||\n               actual instanceof Float64Array)) {\n    return compare(new Uint8Array(actual.buffer),\n                   new Uint8Array(expected.buffer)) === 0;\n\n  // 7.5 For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else if (isBuffer(actual) !== isBuffer(expected)) {\n    return false;\n  } else {\n    memos = memos || {actual: [], expected: []};\n\n    var actualIndex = memos.actual.indexOf(actual);\n    if (actualIndex !== -1) {\n      if (actualIndex === memos.expected.indexOf(expected)) {\n        return true;\n      }\n    }\n\n    memos.actual.push(actual);\n    memos.expected.push(expected);\n\n    return objEquiv(actual, expected, strict, memos);\n  }\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction objEquiv(a, b, strict, actualVisitedObjects) {\n  if (a === null || a === undefined || b === null || b === undefined)\n    return false;\n  // if one is a primitive, the other must be same\n  if (util.isPrimitive(a) || util.isPrimitive(b))\n    return a === b;\n  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))\n    return false;\n  var aIsArgs = isArguments(a);\n  var bIsArgs = isArguments(b);\n  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))\n    return false;\n  if (aIsArgs) {\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return _deepEqual(a, b, strict);\n  }\n  var ka = objectKeys(a);\n  var kb = objectKeys(b);\n  var key, i;\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length !== kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))\n      return false;\n  }\n  return true;\n}\n\n// 8. The non-equivalence assertion tests for any deep inequality.\n// assert.notDeepEqual(actual, expected, message_opt);\n\nassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);\n  }\n};\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\nfunction notDeepStrictEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);\n  }\n}\n\n\n// 9. The strict equality assertion tests strict equality, as determined by ===.\n// assert.strictEqual(actual, expected, message_opt);\n\nassert.strictEqual = function strictEqual(actual, expected, message) {\n  if (actual !== expected) {\n    fail(actual, expected, message, '===', assert.strictEqual);\n  }\n};\n\n// 10. The strict non-equality assertion tests for strict inequality, as\n// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\n\nassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n  if (actual === expected) {\n    fail(actual, expected, message, '!==', assert.notStrictEqual);\n  }\n};\n\nfunction expectedException(actual, expected) {\n  if (!actual || !expected) {\n    return false;\n  }\n\n  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n    return expected.test(actual);\n  }\n\n  try {\n    if (actual instanceof expected) {\n      return true;\n    }\n  } catch (e) {\n    // Ignore.  The instanceof check doesn't work for arrow functions.\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction _tryBlock(block) {\n  var error;\n  try {\n    block();\n  } catch (e) {\n    error = e;\n  }\n  return error;\n}\n\nfunction _throws(shouldThrow, block, expected, message) {\n  var actual;\n\n  if (typeof block !== 'function') {\n    throw new TypeError('\"block\" argument must be a function');\n  }\n\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = null;\n  }\n\n  actual = _tryBlock(block);\n\n  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +\n            (message ? ' ' + message : '.');\n\n  if (shouldThrow && !actual) {\n    fail(actual, expected, 'Missing expected exception' + message);\n  }\n\n  var userProvidedMessage = typeof message === 'string';\n  var isUnwantedException = !shouldThrow && util.isError(actual);\n  var isUnexpectedException = !shouldThrow && actual && !expected;\n\n  if ((isUnwantedException &&\n      userProvidedMessage &&\n      expectedException(actual, expected)) ||\n      isUnexpectedException) {\n    fail(actual, expected, 'Got unwanted exception' + message);\n  }\n\n  if ((shouldThrow && actual && expected &&\n      !expectedException(actual, expected)) || (!shouldThrow && actual)) {\n    throw actual;\n  }\n}\n\n// 11. Expected to throw an error:\n// assert.throws(block, Error_opt, message_opt);\n\nassert.throws = function(block, /*optional*/error, /*optional*/message) {\n  _throws(true, block, error, message);\n};\n\n// EXTENSION! This is annoying to write outside this module.\nassert.doesNotThrow = function(block, /*optional*/error, /*optional*/message) {\n  _throws(false, block, error, message);\n};\n\nassert.ifError = function(err) { if (err) throw err; };\n\n// Expose a strict only variant of assert\nfunction strict(value, message) {\n  if (!value) fail(value, true, message, '==', strict);\n}\nassert.strict = objectAssign(strict, assert, {\n  equal: assert.strictEqual,\n  deepEqual: assert.deepStrictEqual,\n  notEqual: assert.notStrictEqual,\n  notDeepEqual: assert.notDeepStrictEqual\n});\nassert.strict.strict = assert.strict;\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    if (hasOwn.call(obj, key)) keys.push(key);\n  }\n  return keys;\n};\n","// Generated by CoffeeScript 2.5.1\n(function() {\n  /*\n  Module difflib -- helpers for computing deltas between objects.\n\n  Function getCloseMatches(word, possibilities, n=3, cutoff=0.6):\n      Use SequenceMatcher to return list of the best \"good enough\" matches.\n\n  Function contextDiff(a, b):\n      For two lists of strings, return a delta in context diff format.\n\n  Function ndiff(a, b):\n      Return a delta: the difference between `a` and `b` (lists of strings).\n\n  Function restore(delta, which):\n      Return one of the two sequences that generated an ndiff delta.\n\n  Function unifiedDiff(a, b):\n      For two lists of strings, return a delta in unified diff format.\n\n  Class SequenceMatcher:\n      A flexible class for comparing pairs of sequences of any type.\n\n  Class Differ:\n      For producing human-readable deltas from sequences of lines of text.\n  */\n  var Differ, Heap, IS_CHARACTER_JUNK, IS_LINE_JUNK, SequenceMatcher, _any, _arrayCmp, _calculateRatio, _countLeading, _formatRangeContext, _formatRangeUnified, _has, assert, contextDiff, floor, getCloseMatches, max, min, ndiff, restore, unifiedDiff,\n    indexOf = [].indexOf;\n\n  // Requires\n  ({floor, max, min} = Math);\n\n  Heap = require('heap');\n\n  assert = require('assert');\n\n  // Helper functions\n  _calculateRatio = function(matches, length) {\n    if (length) {\n      return 2.0 * matches / length;\n    } else {\n      return 1.0;\n    }\n  };\n\n  _arrayCmp = function(a, b) {\n    var i, l, la, lb, ref;\n    [la, lb] = [a.length, b.length];\n    for (i = l = 0, ref = min(la, lb); (0 <= ref ? l < ref : l > ref); i = 0 <= ref ? ++l : --l) {\n      if (a[i] < b[i]) {\n        return -1;\n      }\n      if (a[i] > b[i]) {\n        return 1;\n      }\n    }\n    return la - lb;\n  };\n\n  _has = function(obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n  };\n\n  _any = function(items) {\n    var item, l, len;\n    for (l = 0, len = items.length; l < len; l++) {\n      item = items[l];\n      if (item) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  SequenceMatcher = class SequenceMatcher {\n    /*\n    SequenceMatcher is a flexible class for comparing pairs of sequences of\n    any type, so long as the sequence elements are hashable.  The basic\n    algorithm predates, and is a little fancier than, an algorithm\n    published in the late 1980's by Ratcliff and Obershelp under the\n    hyperbolic name \"gestalt pattern matching\".  The basic idea is to find\n    the longest contiguous matching subsequence that contains no \"junk\"\n    elements (R-O doesn't address junk).  The same idea is then applied\n    recursively to the pieces of the sequences to the left and to the right\n    of the matching subsequence.  This does not yield minimal edit\n    sequences, but does tend to yield matches that \"look right\" to people.\n\n    SequenceMatcher tries to compute a \"human-friendly diff\" between two\n    sequences.  Unlike e.g. UNIX(tm) diff, the fundamental notion is the\n    longest *contiguous* & junk-free matching subsequence.  That's what\n    catches peoples' eyes.  The Windows(tm) windiff has another interesting\n    notion, pairing up elements that appear uniquely in each sequence.\n    That, and the method here, appear to yield more intuitive difference\n    reports than does diff.  This method appears to be the least vulnerable\n    to synching up on blocks of \"junk lines\", though (like blank lines in\n    ordinary text files, or maybe \"<P>\" lines in HTML files).  That may be\n    because this is the only method of the 3 that has a *concept* of\n    \"junk\" <wink>.\n\n    Example, comparing two strings, and considering blanks to be \"junk\":\n\n    >>> isjunk = (c) -> c is ' '\n    >>> s = new SequenceMatcher(isjunk,\n                                'private Thread currentThread;',\n                                'private volatile Thread currentThread;')\n\n    .ratio() returns a float in [0, 1], measuring the \"similarity\" of the\n    sequences.  As a rule of thumb, a .ratio() value over 0.6 means the\n    sequences are close matches:\n\n    >>> s.ratio().toPrecision(3)\n    '0.866'\n\n    If you're only interested in where the sequences match,\n    .getMatchingBlocks() is handy:\n\n    >>> for [a, b, size] in s.getMatchingBlocks()\n    ...   console.log(\"a[#{a}] and b[#{b}] match for #{size} elements\");\n    a[0] and b[0] match for 8 elements\n    a[8] and b[17] match for 21 elements\n    a[29] and b[38] match for 0 elements\n\n    Note that the last tuple returned by .get_matching_blocks() is always a\n    dummy, (len(a), len(b), 0), and this is the only case in which the last\n    tuple element (number of elements matched) is 0.\n\n    If you want to know how to change the first sequence into the second,\n    use .get_opcodes():\n\n    >>> for [op, a1, a2, b1, b2] in s.getOpcodes()\n    ...   console.log \"#{op} a[#{a1}:#{a2}] b[#{b1}:#{b2}]\"\n    equal a[0:8] b[0:8]\n    insert a[8:8] b[8:17]\n    equal a[8:29] b[17:38]\n\n    See the Differ class for a fancy human-friendly file differencer, which\n    uses SequenceMatcher both to compare sequences of lines, and to compare\n    sequences of characters within similar (near-matching) lines.\n\n    See also function getCloseMatches() in this module, which shows how\n    simple code building on SequenceMatcher can be used to do useful work.\n\n    Timing:  Basic R-O is cubic time worst case and quadratic time expected\n    case.  SequenceMatcher is quadratic time for the worst case and has\n    expected-case behavior dependent in a complicated way on how many\n    elements the sequences have in common; best case time is linear.\n\n    Methods:\n\n    constructor(isjunk=null, a='', b='')\n        Construct a SequenceMatcher.\n\n    setSeqs(a, b)\n        Set the two sequences to be compared.\n\n    setSeq1(a)\n        Set the first sequence to be compared.\n\n    setSeq2(b)\n        Set the second sequence to be compared.\n\n    findLongestMatch(alo, ahi, blo, bhi)\n        Find longest matching block in a[alo:ahi] and b[blo:bhi].\n\n    getMatchingBlocks()\n        Return list of triples describing matching subsequences.\n\n    getOpcodes()\n        Return list of 5-tuples describing how to turn a into b.\n\n    ratio()\n        Return a measure of the sequences' similarity (float in [0,1]).\n\n    quickRatio()\n        Return an upper bound on .ratio() relatively quickly.\n\n    realQuickRatio()\n        Return an upper bound on ratio() very quickly.\n    */\n    constructor(isjunk1, a = '', b = '', autojunk = true) {\n      this.isjunk = isjunk1;\n      this.autojunk = autojunk;\n      /*\n      Construct a SequenceMatcher.\n\n      Optional arg isjunk is null (the default), or a one-argument\n      function that takes a sequence element and returns true iff the\n      element is junk.  Null is equivalent to passing \"(x) -> 0\", i.e.\n      no elements are considered to be junk.  For example, pass\n          (x) -> x in ' \\t'\n      if you're comparing lines as sequences of characters, and don't\n      want to synch up on blanks or hard tabs.\n\n      Optional arg a is the first of two sequences to be compared.  By\n      default, an empty string.  The elements of a must be hashable.  See\n      also .setSeqs() and .setSeq1().\n\n      Optional arg b is the second of two sequences to be compared.  By\n      default, an empty string.  The elements of b must be hashable. See\n      also .setSeqs() and .setSeq2().\n\n      Optional arg autojunk should be set to false to disable the\n      \"automatic junk heuristic\" that treats popular elements as junk\n      (see module documentation for more information).\n      */\n      // Members:\n      // a\n      //      first sequence\n      // b\n      //      second sequence; differences are computed as \"what do\n      //      we need to do to 'a' to change it into 'b'?\"\n      // b2j\n      //      for x in b, b2j[x] is a list of the indices (into b)\n      //      at which x appears; junk elements do not appear\n      // fullbcount\n      //      for x in b, fullbcount[x] == the number of times x\n      //      appears in b; only materialized if really needed (used\n      //      only for computing quickRatio())\n      // matchingBlocks\n      //      a list of [i, j, k] triples, where a[i...i+k] == b[j...j+k];\n      //      ascending & non-overlapping in i and in j; terminated by\n      //      a dummy (len(a), len(b), 0) sentinel\n      // opcodes\n      //      a list of [tag, i1, i2, j1, j2] tuples, where tag is\n      //      one of\n      //          'replace'   a[i1...i2] should be replaced by b[j1...j2]\n      //          'delete'    a[i1...i2] should be deleted\n      //          'insert'    b[j1...j2] should be inserted\n      //          'equal'     a[i1...i2] == b[j1...j2]\n      // isjunk\n      //      a user-supplied function taking a sequence element and\n      //      returning true iff the element is \"junk\" -- this has\n      //      subtle but helpful effects on the algorithm, which I'll\n      //      get around to writing up someday <0.9 wink>.\n      //      DON'T USE!  Only __chainB uses this.  Use isbjunk.\n      // isbjunk\n      //      for x in b, isbjunk(x) == isjunk(x) but much faster;\n      //      DOES NOT WORK for x in a!\n      // isbpopular\n      //      for x in b, isbpopular(x) is true iff b is reasonably long\n      //      (at least 200 elements) and x accounts for more than 1 + 1% of\n      //      its elements (when autojunk is enabled).\n      //      DOES NOT WORK for x in a!\n      this.a = this.b = null;\n      this.setSeqs(a, b);\n    }\n\n    setSeqs(a, b) {\n      /* \n      Set the two sequences to be compared. \n\n      >>> s = new SequenceMatcher()\n      >>> s.setSeqs('abcd', 'bcde')\n      >>> s.ratio()\n      0.75\n      */\n      this.setSeq1(a);\n      return this.setSeq2(b);\n    }\n\n    setSeq1(a) {\n      /* \n      Set the first sequence to be compared. \n\n      The second sequence to be compared is not changed.\n\n      >>> s = new SequenceMatcher(null, 'abcd', 'bcde')\n      >>> s.ratio()\n      0.75\n      >>> s.setSeq1('bcde')\n      >>> s.ratio()\n      1.0\n\n      SequenceMatcher computes and caches detailed information about the\n      second sequence, so if you want to compare one sequence S against\n      many sequences, use .setSeq2(S) once and call .setSeq1(x)\n      repeatedly for each of the other sequences.\n\n      See also setSeqs() and setSeq2().\n      */\n      if (a === this.a) {\n        return;\n      }\n      this.a = a;\n      return this.matchingBlocks = this.opcodes = null;\n    }\n\n    setSeq2(b) {\n      /*\n      Set the second sequence to be compared. \n\n      The first sequence to be compared is not changed.\n\n      >>> s = new SequenceMatcher(null, 'abcd', 'bcde')\n      >>> s.ratio()\n      0.75\n      >>> s.setSeq2('abcd')\n      >>> s.ratio()\n      1.0\n\n      SequenceMatcher computes and caches detailed information about the\n      second sequence, so if you want to compare one sequence S against\n      many sequences, use .setSeq2(S) once and call .setSeq1(x)\n      repeatedly for each of the other sequences.\n\n      See also setSeqs() and setSeq1().\n      */\n      if (b === this.b) {\n        return;\n      }\n      this.b = b;\n      this.matchingBlocks = this.opcodes = null;\n      this.fullbcount = null;\n      return this._chainB();\n    }\n\n    // For each element x in b, set b2j[x] to a list of the indices in\n    // b where x appears; the indices are in increasing order; note that\n    // the number of times x appears in b is b2j[x].length ...\n    // when @isjunk is defined, junk elements don't show up in this\n    // map at all, which stops the central findLongestMatch method\n    // from starting any matching block at a junk element ...\n    // also creates the fast isbjunk function ...\n    // b2j also does not contain entries for \"popular\" elements, meaning\n    // elements that account for more than 1 + 1% of the total elements, and\n    // when the sequence is reasonably large (>= 200 elements); this can\n    // be viewed as an adaptive notion of semi-junk, and yields an enormous\n    // speedup when, e.g., comparing program files with hundreds of\n    // instances of \"return null;\" ...\n    // note that this is only called when b changes; so for cross-product\n    // kinds of matches, it's best to call setSeq2 once, then setSeq1\n    // repeatedly\n    _chainB() {\n      var b, b2j, elt, i, idxs, indices, isjunk, junk, l, len, len1, m, n, ntest, popular, ref;\n      // Because isjunk is a user-defined function, and we test\n      // for junk a LOT, it's important to minimize the number of calls.\n      // Before the tricks described here, __chainB was by far the most\n      // time-consuming routine in the whole module!  If anyone sees\n      // Jim Roskind, thank him again for profile.py -- I never would\n      // have guessed that.\n      // The first trick is to build b2j ignoring the possibility\n      // of junk.  I.e., we don't call isjunk at all yet.  Throwing\n      // out the junk later is much cheaper than building b2j \"right\"\n      // from the start.\n      b = this.b;\n      this.b2j = b2j = {};\n      for (i = l = 0, len = b.length; l < len; i = ++l) {\n        elt = b[i];\n        indices = _has(b2j, elt) ? b2j[elt] : b2j[elt] = [];\n        indices.push(i);\n      }\n      // Purge junk elements\n      junk = {};\n      isjunk = this.isjunk;\n      if (isjunk) {\n        ref = Object.keys(b2j);\n        for (m = 0, len1 = ref.length; m < len1; m++) {\n          elt = ref[m];\n          if (isjunk(elt)) {\n            junk[elt] = true;\n            delete b2j[elt];\n          }\n        }\n      }\n      // Purge popular elements that are not junk\n      popular = {};\n      n = b.length;\n      if (this.autojunk && n >= 200) {\n        ntest = floor(n / 100) + 1;\n        for (elt in b2j) {\n          idxs = b2j[elt];\n          if (idxs.length > ntest) {\n            popular[elt] = true;\n            delete b2j[elt];\n          }\n        }\n      }\n      // Now for x in b, isjunk(x) == x in junk, but the latter is much faster.\n      // Sicne the number of *unique* junk elements is probably small, the\n      // memory burden of keeping this set alive is likely trivial compared to\n      // the size of b2j.\n      this.isbjunk = function(b) {\n        return _has(junk, b);\n      };\n      return this.isbpopular = function(b) {\n        return _has(popular, b);\n      };\n    }\n\n    findLongestMatch(alo, ahi, blo, bhi) {\n      var a, b, b2j, besti, bestj, bestsize, i, isbjunk, j, j2len, k, l, len, m, newj2len, ref, ref1, ref2;\n      /* \n      Find longest matching block in a[alo...ahi] and b[blo...bhi].  \n\n      If isjunk is not defined:\n\n      Return [i,j,k] such that a[i...i+k] is equal to b[j...j+k], where\n          alo <= i <= i+k <= ahi\n          blo <= j <= j+k <= bhi\n      and for all [i',j',k'] meeting those conditions,\n          k >= k'\n          i <= i'\n          and if i == i', j <= j'\n\n      In other words, of all maximal matching blocks, return one that\n      starts earliest in a, and of all those maximal matching blocks that\n      start earliest in a, return the one that starts earliest in b.\n\n      >>> isjunk = (x) -> x is ' '\n      >>> s = new SequenceMatcher(isjunk, ' abcd', 'abcd abcd')\n      >>> s.findLongestMatch(0, 5, 0, 9)\n      [1, 0, 4]\n\n      >>> s = new SequenceMatcher(null, 'ab', 'c')\n      >>> s.findLongestMatch(0, 2, 0, 1)\n      [0, 0, 0]\n      */\n      // CAUTION:  stripping common prefix or suffix would be incorrect.\n      // E.g.,\n      //    ab\n      //    acab\n      // Longest matching block is \"ab\", but if common prefix is\n      // stripped, it's \"a\" (tied with \"b\").  UNIX(tm) diff does so\n      // strip, so ends up claiming that ab is changed to acab by\n      // inserting \"ca\" in the middle.  That's minimal but unintuitive:\n      // \"it's obvious\" that someone inserted \"ac\" at the front.\n      // Windiff ends up at the same place as diff, but by pairing up\n      // the unique 'b's and then matching the first two 'a's.\n      [a, b, b2j, isbjunk] = [this.a, this.b, this.b2j, this.isbjunk];\n      [besti, bestj, bestsize] = [alo, blo, 0];\n      // find longest junk-free match\n      // during an iteration of the loop, j2len[j] = length of longest\n      // junk-free match ending with a[i-1] and b[j]\n      j2len = {};\n      for (i = l = ref = alo, ref1 = ahi; (ref <= ref1 ? l < ref1 : l > ref1); i = ref <= ref1 ? ++l : --l) {\n        // look at all instances of a[i] in b; note that because\n        // b2j has no junk keys, the loop is skipped if a[i] is junk\n        newj2len = {};\n        ref2 = (_has(b2j, a[i]) ? b2j[a[i]] : []);\n        for (m = 0, len = ref2.length; m < len; m++) {\n          j = ref2[m];\n          if (j < blo) {\n            // a[i] matches b[j]\n            continue;\n          }\n          if (j >= bhi) {\n            break;\n          }\n          k = newj2len[j] = (j2len[j - 1] || 0) + 1;\n          if (k > bestsize) {\n            [besti, bestj, bestsize] = [i - k + 1, j - k + 1, k];\n          }\n        }\n        j2len = newj2len;\n      }\n      // Extend the best by non-junk elements on each end.  In particular,\n      // \"popular\" non-junk elements aren't in b2j, which greatly speeds\n      // the inner loop above, but also means \"the best\" match so far\n      // doesn't contain any junk *or* popular non-junk elements.\n      while (besti > alo && bestj > blo && !isbjunk(b[bestj - 1]) && a[besti - 1] === b[bestj - 1]) {\n        [besti, bestj, bestsize] = [besti - 1, bestj - 1, bestsize + 1];\n      }\n      while (besti + bestsize < ahi && bestj + bestsize < bhi && !isbjunk(b[bestj + bestsize]) && a[besti + bestsize] === b[bestj + bestsize]) {\n        bestsize++;\n      }\n      // Now that we have a wholly interesting match (albeit possibly\n      // empty!), we may as well suck up the matching junk on each\n      // side of it too.  Can't think of a good reason not to, and it\n      // saves post-processing the (possibly considerable) expense of\n      // figuring out what to do with it.  In the case of an empty\n      // interesting match, this is clearly the right thing to do,\n      // because no other kind of match is possible in the regions.\n      while (besti > alo && bestj > blo && isbjunk(b[bestj - 1]) && a[besti - 1] === b[bestj - 1]) {\n        [besti, bestj, bestsize] = [besti - 1, bestj - 1, bestsize + 1];\n      }\n      while (besti + bestsize < ahi && bestj + bestsize < bhi && isbjunk(b[bestj + bestsize]) && a[besti + bestsize] === b[bestj + bestsize]) {\n        bestsize++;\n      }\n      return [besti, bestj, bestsize];\n    }\n\n    getMatchingBlocks() {\n      var ahi, alo, bhi, blo, i, i1, i2, j, j1, j2, k, k1, k2, l, la, lb, len, matchingBlocks, nonAdjacent, queue, x;\n      if (this.matchingBlocks) {\n        /*\n        Return list of triples describing matching subsequences.\n\n        Each triple is of the form [i, j, n], and means that\n        a[i...i+n] == b[j...j+n].  The triples are monotonically increasing in\n        i and in j.  it's also guaranteed that if\n        [i, j, n] and [i', j', n'] are adjacent triples in the list, and\n        the second is not the last triple in the list, then i+n != i' or\n        j+n != j'.  IOW, adjacent triples never describe adjacent equal\n        blocks.\n\n        The last triple is a dummy, [a.length, b.length, 0], and is the only\n        triple with n==0.\n\n        >>> s = new SequenceMatcher(null, 'abxcd', 'abcd')\n        >>> s.getMatchingBlocks()\n        [[0, 0, 2], [3, 2, 2], [5, 4, 0]]\n\n        */\n        return this.matchingBlocks;\n      }\n      [la, lb] = [this.a.length, this.b.length];\n      // This is most naturally expressed as a recursive algorithm, but\n      // at least one user bumped into extreme use cases that exceeded\n      // the recursion limit on their box.  So, now we maintain a list\n      // ('queue`) of blocks we still need to look at, and append partial\n      // results to `matching_blocks` in a loop; the matches are sorted\n      // at the end.\n      queue = [[0, la, 0, lb]];\n      matchingBlocks = [];\n      while (queue.length) {\n        [alo, ahi, blo, bhi] = queue.pop();\n        [i, j, k] = x = this.findLongestMatch(alo, ahi, blo, bhi);\n        // a[alo...i] vs b[blo...j] unknown\n        // a[i...i+k] same as b[j...j+k]\n        // a[i+k...ahi] vs b[j+k...bhi] unknown\n        if (k) {\n          matchingBlocks.push(x);\n          if (alo < i && blo < j) {\n            queue.push([alo, i, blo, j]);\n          }\n          if (i + k < ahi && j + k < bhi) {\n            queue.push([i + k, ahi, j + k, bhi]);\n          }\n        }\n      }\n      matchingBlocks.sort(_arrayCmp);\n      // It's possible that we have adjacent equal blocks in the\n      // matching_blocks list now. \n      i1 = j1 = k1 = 0;\n      nonAdjacent = [];\n      for (l = 0, len = matchingBlocks.length; l < len; l++) {\n        [i2, j2, k2] = matchingBlocks[l];\n        // Is this block adjacent to i1, j1, k1?\n        if (i1 + k1 === i2 && j1 + k1 === j2) {\n          // Yes, so collapse them -- this just increases the length of\n          // the first block by the length of the second, and the first\n          // block so lengthened remains the block to compare against.\n          k1 += k2;\n        } else {\n          // Not adjacent.  Remember the first block (k1==0 means it's\n          // the dummy we started with), and make the second block the\n          // new block to compare against.\n          if (k1) {\n            nonAdjacent.push([i1, j1, k1]);\n          }\n          [i1, j1, k1] = [i2, j2, k2];\n        }\n      }\n      if (k1) {\n        nonAdjacent.push([i1, j1, k1]);\n      }\n      nonAdjacent.push([la, lb, 0]);\n      return this.matchingBlocks = nonAdjacent;\n    }\n\n    getOpcodes() {\n      var ai, answer, bj, i, j, l, len, ref, size, tag;\n      if (this.opcodes) {\n        /* \n        Return list of 5-tuples describing how to turn a into b.\n\n        Each tuple is of the form [tag, i1, i2, j1, j2].  The first tuple\n        has i1 == j1 == 0, and remaining tuples have i1 == the i2 from the\n        tuple preceding it, and likewise for j1 == the previous j2.\n\n        The tags are strings, with these meanings:\n\n        'replace':  a[i1...i2] should be replaced by b[j1...j2]\n        'delete':   a[i1...i2] should be deleted.\n                    Note that j1==j2 in this case.\n        'insert':   b[j1...j2] should be inserted at a[i1...i1].\n                    Note that i1==i2 in this case.\n        'equal':    a[i1...i2] == b[j1...j2]\n\n        >>> s = new SequenceMatcher(null, 'qabxcd', 'abycdf')\n        >>> s.getOpcodes()\n        [ [ 'delete'  , 0 , 1 , 0 , 0 ] ,\n          [ 'equal'   , 1 , 3 , 0 , 2 ] ,\n          [ 'replace' , 3 , 4 , 2 , 3 ] ,\n          [ 'equal'   , 4 , 6 , 3 , 5 ] ,\n          [ 'insert'  , 6 , 6 , 5 , 6 ] ]\n        */\n        return this.opcodes;\n      }\n      i = j = 0;\n      this.opcodes = answer = [];\n      ref = this.getMatchingBlocks();\n      for (l = 0, len = ref.length; l < len; l++) {\n        [ai, bj, size] = ref[l];\n        // invariant:  we've pumped out correct diffs to change\n        // a[0...i] into b[0...j], and the next matching block is\n        // a[ai...ai+size] == b[bj...bj+size].  So we need to pump\n        // out a diff to change a[i:ai] into b[j...bj], pump out\n        // the matching block, and move [i,j] beyond the match\n        tag = '';\n        if (i < ai && j < bj) {\n          tag = 'replace';\n        } else if (i < ai) {\n          tag = 'delete';\n        } else if (j < bj) {\n          tag = 'insert';\n        }\n        if (tag) {\n          answer.push([tag, i, ai, j, bj]);\n        }\n        [i, j] = [ai + size, bj + size];\n        // the list of matching blocks is terminated by a\n        // sentinel with size 0\n        if (size) {\n          answer.push(['equal', ai, i, bj, j]);\n        }\n      }\n      return answer;\n    }\n\n    getGroupedOpcodes(n = 3) {\n      /* \n      Isolate change clusters by eliminating ranges with no changes.\n\n      Return a list groups with upto n lines of context.\n      Each group is in the same format as returned by get_opcodes().\n\n      >>> a = [1...40].map(String)\n      >>> b = a.slice()\n      >>> b[8...8] = 'i'\n      >>> b[20] += 'x'\n      >>> b[23...28] = []\n      >>> b[30] += 'y'\n      >>> s = new SequenceMatcher(null, a, b)\n      >>> s.getGroupedOpcodes()\n      [ [ [ 'equal'  , 5 , 8  , 5 , 8 ],\n          [ 'insert' , 8 , 8  , 8 , 9 ],\n          [ 'equal'  , 8 , 11 , 9 , 12 ] ],\n        [ [ 'equal'   , 16 , 19 , 17 , 20 ],\n          [ 'replace' , 19 , 20 , 20 , 21 ],\n          [ 'equal'   , 20 , 22 , 21 , 23 ],\n          [ 'delete'  , 22 , 27 , 23 , 23 ],\n          [ 'equal'   , 27 , 30 , 23 , 26 ] ],\n        [ [ 'equal'   , 31 , 34 , 27 , 30 ],\n          [ 'replace' , 34 , 35 , 30 , 31 ],\n          [ 'equal'   , 35 , 38 , 31 , 34 ] ] ]\n      */\n      var codes, group, groups, i1, i2, j1, j2, l, len, nn, tag;\n      codes = this.getOpcodes();\n      if (!codes.length) {\n        codes = [['equal', 0, 1, 0, 1]];\n      }\n      // Fixup leading and trailing groups if they show no changes.\n      if (codes[0][0] === 'equal') {\n        [tag, i1, i2, j1, j2] = codes[0];\n        codes[0] = [tag, max(i1, i2 - n), i2, max(j1, j2 - n), j2];\n      }\n      if (codes[codes.length - 1][0] === 'equal') {\n        [tag, i1, i2, j1, j2] = codes[codes.length - 1];\n        codes[codes.length - 1] = [tag, i1, min(i2, i1 + n), j1, min(j2, j1 + n)];\n      }\n      nn = n + n;\n      groups = [];\n      group = [];\n      for (l = 0, len = codes.length; l < len; l++) {\n        [tag, i1, i2, j1, j2] = codes[l];\n        // End the current group and start a new one whenever\n        // there is a large range with no changes.\n        if (tag === 'equal' && i2 - i1 > nn) {\n          group.push([tag, i1, min(i2, i1 + n), j1, min(j2, j1 + n)]);\n          groups.push(group);\n          group = [];\n          [i1, j1] = [max(i1, i2 - n), max(j1, j2 - n)];\n        }\n        group.push([tag, i1, i2, j1, j2]);\n      }\n      if (group.length && !(group.length === 1 && group[0][0] === 'equal')) {\n        groups.push(group);\n      }\n      return groups;\n    }\n\n    ratio() {\n      /*\n      Return a measure of the sequences' similarity (float in [0,1]).\n\n      Where T is the total number of elements in both sequences, and\n      M is the number of matches, this is 2.0*M / T.\n      Note that this is 1 if the sequences are identical, and 0 if\n      they have nothing in common.\n\n      .ratio() is expensive to compute if you haven't already computed\n      .getMatchingBlocks() or .getOpcodes(), in which case you may\n      want to try .quickRatio() or .realQuickRatio() first to get an\n      upper bound.\n\n      >>> s = new SequenceMatcher(null, 'abcd', 'bcde')\n      >>> s.ratio()\n      0.75\n      >>> s.quickRatio()\n      0.75\n      >>> s.realQuickRatio()\n      1.0\n      */\n      var l, len, match, matches, ref;\n      matches = 0;\n      ref = this.getMatchingBlocks();\n      for (l = 0, len = ref.length; l < len; l++) {\n        match = ref[l];\n        matches += match[2];\n      }\n      return _calculateRatio(matches, this.a.length + this.b.length);\n    }\n\n    quickRatio() {\n      var avail, elt, fullbcount, l, len, len1, m, matches, numb, ref, ref1;\n      /*\n      Return an upper bound on ratio() relatively quickly.\n\n      This isn't defined beyond that it is an upper bound on .ratio(), and\n      is faster to compute.\n      */\n      // viewing a and b as multisets, set matches to the cardinality\n      // of their intersection; this counts the number of matches\n      // without regard to order, so is clearly an upper bound\n      if (!this.fullbcount) {\n        this.fullbcount = fullbcount = {};\n        ref = this.b;\n        for (l = 0, len = ref.length; l < len; l++) {\n          elt = ref[l];\n          fullbcount[elt] = (fullbcount[elt] || 0) + 1;\n        }\n      }\n      fullbcount = this.fullbcount;\n      // avail[x] is the number of times x appears in 'b' less the\n      // number of times we've seen it in 'a' so far ... kinda\n      avail = {};\n      matches = 0;\n      ref1 = this.a;\n      for (m = 0, len1 = ref1.length; m < len1; m++) {\n        elt = ref1[m];\n        if (_has(avail, elt)) {\n          numb = avail[elt];\n        } else {\n          numb = fullbcount[elt] || 0;\n        }\n        avail[elt] = numb - 1;\n        if (numb > 0) {\n          matches++;\n        }\n      }\n      return _calculateRatio(matches, this.a.length + this.b.length);\n    }\n\n    realQuickRatio() {\n      /*\n      Return an upper bound on ratio() very quickly.\n\n      This isn't defined beyond that it is an upper bound on .ratio(), and\n      is faster to compute than either .ratio() or .quickRatio().\n      */\n      var la, lb;\n      [la, lb] = [this.a.length, this.b.length];\n      // can't have more matches than the number of elements in the\n      // shorter sequence\n      return _calculateRatio(min(la, lb), la + lb);\n    }\n\n  };\n\n  getCloseMatches = function(word, possibilities, n = 3, cutoff = 0.6) {\n    var l, len, len1, m, result, results, s, score, x;\n    /*\n    Use SequenceMatcher to return list of the best \"good enough\" matches.\n\n    word is a sequence for which close matches are desired (typically a\n    string).\n\n    possibilities is a list of sequences against which to match word\n    (typically a list of strings).\n\n    Optional arg n (default 3) is the maximum number of close matches to\n    return.  n must be > 0.\n\n    Optional arg cutoff (default 0.6) is a float in [0, 1].  Possibilities\n    that don't score at least that similar to word are ignored.\n\n    The best (no more than n) matches among the possibilities are returned\n    in a list, sorted by similarity score, most similar first.\n\n    >>> getCloseMatches('appel', ['ape', 'apple', 'peach', 'puppy'])\n    ['apple', 'ape']\n    >>> KEYWORDS = require('coffee-script').RESERVED\n    >>> getCloseMatches('wheel', KEYWORDS)\n    ['when', 'while']\n    >>> getCloseMatches('accost', KEYWORDS)\n    ['const']\n    */\n    if (!(n > 0)) {\n      throw new Error(`n must be > 0: (${n})`);\n    }\n    if (!((0.0 <= cutoff && cutoff <= 1.0))) {\n      throw new Error(`cutoff must be in [0.0, 1.0]: (${cutoff})`);\n    }\n    result = [];\n    s = new SequenceMatcher();\n    s.setSeq2(word);\n    for (l = 0, len = possibilities.length; l < len; l++) {\n      x = possibilities[l];\n      s.setSeq1(x);\n      if (s.realQuickRatio() >= cutoff && s.quickRatio() >= cutoff && s.ratio() >= cutoff) {\n        result.push([s.ratio(), x]);\n      }\n    }\n    // Move the best scorers to head of list\n    result = Heap.nlargest(result, n, _arrayCmp);\n    results = [];\n    for (m = 0, len1 = result.length; m < len1; m++) {\n      [score, x] = result[m];\n      // Strip scores for the best n matches\n      results.push(x);\n    }\n    return results;\n  };\n\n  _countLeading = function(line, ch) {\n    /*\n    Return number of `ch` characters at the start of `line`.\n\n    >>> _countLeading('   abc', ' ')\n    3\n    */\n    var i, n;\n    [i, n] = [0, line.length];\n    while (i < n && line[i] === ch) {\n      i++;\n    }\n    return i;\n  };\n\n  Differ = class Differ {\n    /*\n    Differ is a class for comparing sequences of lines of text, and\n    producing human-readable differences or deltas.  Differ uses\n    SequenceMatcher both to compare sequences of lines, and to compare\n    sequences of characters within similar (near-matching) lines.\n\n    Each line of a Differ delta begins with a two-letter code:\n\n        '- '    line unique to sequence 1\n        '+ '    line unique to sequence 2\n        '  '    line common to both sequences\n        '? '    line not present in either input sequence\n\n    Lines beginning with '? ' attempt to guide the eye to intraline\n    differences, and were not present in either input sequence.  These lines\n    can be confusing if the sequences contain tab characters.\n\n    Note that Differ makes no claim to produce a *minimal* diff.  To the\n    contrary, minimal diffs are often counter-intuitive, because they synch\n    up anywhere possible, sometimes accidental matches 100 pages apart.\n    Restricting synch points to contiguous matches preserves some notion of\n    locality, at the occasional cost of producing a longer diff.\n\n    Example: Comparing two texts.\n\n    >>> text1 = ['1. Beautiful is better than ugly.\\n',\n    ...   '2. Explicit is better than implicit.\\n',\n    ...   '3. Simple is better than complex.\\n',\n    ...   '4. Complex is better than complicated.\\n']\n    >>> text1.length\n    4\n    >>> text2 = ['1. Beautiful is better than ugly.\\n',\n    ...   '3.   Simple is better than complex.\\n',\n    ...   '4. Complicated is better than complex.\\n',\n    ...   '5. Flat is better than nested.\\n']\n\n    Next we instantiate a Differ object:\n\n    >>> d = new Differ()\n\n    Note that when instantiating a Differ object we may pass functions to\n    filter out line and character 'junk'.\n\n    Finally, we compare the two:\n\n    >>> result = d.compare(text1, text2)\n    [ '  1. Beautiful is better than ugly.\\n',\n      '- 2. Explicit is better than implicit.\\n',\n      '- 3. Simple is better than complex.\\n',\n      '+ 3.   Simple is better than complex.\\n',\n      '?   ++\\n',\n      '- 4. Complex is better than complicated.\\n',\n      '?          ^                     ---- ^\\n',\n      '+ 4. Complicated is better than complex.\\n',\n      '?         ++++ ^                      ^\\n',\n      '+ 5. Flat is better than nested.\\n' ]\n\n    Methods:\n\n    constructor(linejunk=null, charjunk=null)\n        Construct a text differencer, with optional filters.\n    compare(a, b)\n        Compare two sequences of lines; generate the resulting delta.\n    */\n    constructor(linejunk1, charjunk1) {\n      this.linejunk = linejunk1;\n      this.charjunk = charjunk1;\n    }\n\n    /*\n    Construct a text differencer, with optional filters.\n\n    The two optional keyword parameters are for filter functions:\n\n    - `linejunk`: A function that should accept a single string argument,\n      and return true iff the string is junk. The module-level function\n      `IS_LINE_JUNK` may be used to filter out lines without visible\n      characters, except for at most one splat ('#').  It is recommended\n      to leave linejunk null. \n\n    - `charjunk`: A function that should accept a string of length 1. The\n      module-level function `IS_CHARACTER_JUNK` may be used to filter out\n      whitespace characters (a blank or tab; **note**: bad idea to include\n      newline in this!).  Use of IS_CHARACTER_JUNK is recommended.\n    */\n    compare(a, b) {\n      /*\n      Compare two sequences of lines; generate the resulting delta.\n\n      Each sequence must contain individual single-line strings ending with\n      newlines. Such sequences can be obtained from the `readlines()` method\n      of file-like objects.  The delta generated also consists of newline-\n      terminated strings, ready to be printed as-is via the writeline()\n      method of a file-like object.\n\n      Example:\n\n      >>> d = new Differ\n      >>> d.compare(['one\\n', 'two\\n', 'three\\n'],\n      ...           ['ore\\n', 'tree\\n', 'emu\\n'])\n      [ '- one\\n',\n        '?  ^\\n',\n        '+ ore\\n',\n        '?  ^\\n',\n        '- two\\n',\n        '- three\\n',\n        '?  -\\n',\n        '+ tree\\n',\n        '+ emu\\n' ]\n      */\n      var ahi, alo, bhi, blo, cruncher, g, l, len, len1, line, lines, m, ref, tag;\n      cruncher = new SequenceMatcher(this.linejunk, a, b);\n      lines = [];\n      ref = cruncher.getOpcodes();\n      for (l = 0, len = ref.length; l < len; l++) {\n        [tag, alo, ahi, blo, bhi] = ref[l];\n        switch (tag) {\n          case 'replace':\n            g = this._fancyReplace(a, alo, ahi, b, blo, bhi);\n            break;\n          case 'delete':\n            g = this._dump('-', a, alo, ahi);\n            break;\n          case 'insert':\n            g = this._dump('+', b, blo, bhi);\n            break;\n          case 'equal':\n            g = this._dump(' ', a, alo, ahi);\n            break;\n          default:\n            throw new Error(`unknow tag (${tag})`);\n        }\n        for (m = 0, len1 = g.length; m < len1; m++) {\n          line = g[m];\n          lines.push(line);\n        }\n      }\n      return lines;\n    }\n\n    _dump(tag, x, lo, hi) {\n      var i, l, ref, ref1, results;\n      results = [];\n      for (i = l = ref = lo, ref1 = hi; (ref <= ref1 ? l < ref1 : l > ref1); i = ref <= ref1 ? ++l : --l) {\n        /*\n        Generate comparison results for a same-tagged range.\n        */\n        results.push(`${tag} ${x[i]}`);\n      }\n      return results;\n    }\n\n    _plainReplace(a, alo, ahi, b, blo, bhi) {\n      var first, g, l, len, len1, line, lines, m, ref, second;\n      assert(alo < ahi && blo < bhi);\n      // dump the shorter block first -- reduces the burden on short-term\n      // memory if the blocks are of very different sizes\n      if (bhi - blo < ahi - alo) {\n        first = this._dump('+', b, blo, bhi);\n        second = this._dump('-', a, alo, ahi);\n      } else {\n        first = this._dump('-', a, alo, ahi);\n        second = this._dump('+', b, blo, bhi);\n      }\n      lines = [];\n      ref = [first, second];\n      for (l = 0, len = ref.length; l < len; l++) {\n        g = ref[l];\n        for (m = 0, len1 = g.length; m < len1; m++) {\n          line = g[m];\n          lines.push(line);\n        }\n      }\n      return lines;\n    }\n\n    _fancyReplace(a, alo, ahi, b, blo, bhi) {\n      var aelt, ai, ai1, ai2, atags, belt, bestRatio, besti, bestj, bj, bj1, bj2, btags, cruncher, cutoff, eqi, eqj, i, j, l, la, lb, len, len1, len2, len3, len4, line, lines, m, o, p, q, r, ref, ref1, ref2, ref3, ref4, ref5, ref6, ref7, ref8, t, tag;\n      /*\n      When replacing one block of lines with another, search the blocks\n      for *similar* lines; the best-matching pair (if any) is used as a\n      synch point, and intraline difference marking is done on the\n      similar pair. Lots of work, but often worth it.\n\n      Example:\n      >>> d = new Differ\n      >>> d._fancyReplace(['abcDefghiJkl\\n'], 0, 1,\n      ...                 ['abcdefGhijkl\\n'], 0, 1)\n      [ '- abcDefghiJkl\\n',\n        '?    ^  ^  ^\\n',\n        '+ abcdefGhijkl\\n',\n        '?    ^  ^  ^\\n' ]\n      */\n      // don't synch up unless the lines have a similarity score of at\n      // least cutoff; best_ratio tracks the best score seen so far\n      [bestRatio, cutoff] = [0.74, 0.75];\n      cruncher = new SequenceMatcher(this.charjunk);\n      [eqi, eqj] = [\n        null,\n        null // 1st indices of equal lines (if any)\n      ];\n      lines = [];\n// search for the pair that matches best without being identical\n// (identical lines must be junk lines, & we don't want to synch up\n// on junk -- unless we have to)\n      for (j = l = ref = blo, ref1 = bhi; (ref <= ref1 ? l < ref1 : l > ref1); j = ref <= ref1 ? ++l : --l) {\n        bj = b[j];\n        cruncher.setSeq2(bj);\n        for (i = m = ref2 = alo, ref3 = ahi; (ref2 <= ref3 ? m < ref3 : m > ref3); i = ref2 <= ref3 ? ++m : --m) {\n          ai = a[i];\n          if (ai === bj) {\n            if (eqi === null) {\n              [eqi, eqj] = [i, j];\n            }\n            continue;\n          }\n          cruncher.setSeq1(ai);\n          // computing similarity is expensive, so use the quick\n          // upper bounds first -- have seen this speed up messy\n          // compares by a factor of 3.\n          // note that ratio() is only expensive to compute the first\n          // time it's called on a sequence pair; the expensive part\n          // of the computation is cached by cruncher\n          if (cruncher.realQuickRatio() > bestRatio && cruncher.quickRatio() > bestRatio && cruncher.ratio() > bestRatio) {\n            [bestRatio, besti, bestj] = [cruncher.ratio(), i, j];\n          }\n        }\n      }\n      if (bestRatio < cutoff) {\n        // no non-identical \"pretty close\" pair\n        if (eqi === null) {\n          ref4 = this._plainReplace(a, alo, ahi, b, blo, bhi);\n          // no identical pair either -- treat it as a straight replace\n          for (o = 0, len = ref4.length; o < len; o++) {\n            line = ref4[o];\n            lines.push(line);\n          }\n          return lines;\n        }\n        // no close pair, but an identical pair -- synch up on that\n        [besti, bestj, bestRatio] = [eqi, eqj, 1.0];\n      } else {\n        // there's a close pair, so forget the identical pair (if any)\n        eqi = null;\n      }\n      ref5 = this._fancyHelper(a, alo, besti, b, blo, bestj);\n      // a[besti] very similar to b[bestj]; eqi is null iff they're not\n      // identical\n\n      // pump out diffs from before the synch point\n      for (p = 0, len1 = ref5.length; p < len1; p++) {\n        line = ref5[p];\n        lines.push(line);\n      }\n      // do intraline marking on the synch pair\n      [aelt, belt] = [a[besti], b[bestj]];\n      if (eqi === null) {\n        // pump out a '-', '?', '+', '?' quad for the synched lines\n        atags = btags = '';\n        cruncher.setSeqs(aelt, belt);\n        ref6 = cruncher.getOpcodes();\n        for (q = 0, len2 = ref6.length; q < len2; q++) {\n          [tag, ai1, ai2, bj1, bj2] = ref6[q];\n          [la, lb] = [ai2 - ai1, bj2 - bj1];\n          switch (tag) {\n            case 'replace':\n              atags += Array(la + 1).join('^');\n              btags += Array(lb + 1).join('^');\n              break;\n            case 'delete':\n              atags += Array(la + 1).join('-');\n              break;\n            case 'insert':\n              btags += Array(lb + 1).join('+');\n              break;\n            case 'equal':\n              atags += Array(la + 1).join(' ');\n              btags += Array(lb + 1).join(' ');\n              break;\n            default:\n              throw new Error(`unknow tag (${tag})`);\n          }\n        }\n        ref7 = this._qformat(aelt, belt, atags, btags);\n        for (r = 0, len3 = ref7.length; r < len3; r++) {\n          line = ref7[r];\n          lines.push(line);\n        }\n      } else {\n        // the synch pair is identical\n        lines.push('  ' + aelt);\n      }\n      ref8 = this._fancyHelper(a, besti + 1, ahi, b, bestj + 1, bhi);\n      // pump out diffs from after the synch point\n      for (t = 0, len4 = ref8.length; t < len4; t++) {\n        line = ref8[t];\n        lines.push(line);\n      }\n      return lines;\n    }\n\n    _fancyHelper(a, alo, ahi, b, blo, bhi) {\n      var g;\n      g = [];\n      if (alo < ahi) {\n        if (blo < bhi) {\n          g = this._fancyReplace(a, alo, ahi, b, blo, bhi);\n        } else {\n          g = this._dump('-', a, alo, ahi);\n        }\n      } else if (blo < bhi) {\n        g = this._dump('+', b, blo, bhi);\n      }\n      return g;\n    }\n\n    _qformat(aline, bline, atags, btags) {\n      /*\n      Format \"?\" output and deal with leading tabs.\n\n      Example:\n\n      >>> d = new Differ\n      >>> d._qformat('\\tabcDefghiJkl\\n', '\\tabcdefGhijkl\\n',\n      [ '- \\tabcDefghiJkl\\n',\n        '? \\t ^ ^  ^\\n',\n        '+ \\tabcdefGhijkl\\n',\n        '? \\t ^ ^  ^\\n' ]\n      */\n      var common, lines;\n      lines = [];\n      // Can hurt, but will probably help most of the time.\n      common = min(_countLeading(aline, '\\t'), _countLeading(bline, '\\t'));\n      common = min(common, _countLeading(atags.slice(0, common), ' '));\n      common = min(common, _countLeading(btags.slice(0, common), ' '));\n      atags = atags.slice(common).replace(/\\s+$/, '');\n      btags = btags.slice(common).replace(/\\s+$/, '');\n      lines.push('- ' + aline);\n      if (atags.length) {\n        lines.push(`? ${Array(common + 1).join('\\t')}${atags}\\n`);\n      }\n      lines.push('+ ' + bline);\n      if (btags.length) {\n        lines.push(`? ${Array(common + 1).join('\\t')}${btags}\\n`);\n      }\n      return lines;\n    }\n\n  };\n\n  // With respect to junk, an earlier version of ndiff simply refused to\n  // *start* a match with a junk element.  The result was cases like this:\n  //     before: private Thread currentThread;\n  //     after:  private volatile Thread currentThread;\n  // If you consider whitespace to be junk, the longest contiguous match\n  // not starting with junk is \"e Thread currentThread\".  So ndiff reported\n  // that \"e volatil\" was inserted between the 't' and the 'e' in \"private\".\n  // While an accurate view, to people that's absurd.  The current version\n  // looks for matching blocks that are entirely junk-free, then extends the\n  // longest one of those as far as possible but only with matching junk.\n  // So now \"currentThread\" is matched, then extended to suck up the\n  // preceding blank; then \"private\" is matched, and extended to suck up the\n  // following blank; then \"Thread\" is matched; and finally ndiff reports\n  // that \"volatile \" was inserted before \"Thread\".  The only quibble\n  // remaining is that perhaps it was really the case that \" volatile\"\n  // was inserted after \"private\".  I can live with that <wink>.\n  IS_LINE_JUNK = function(line, pat = /^\\s*#?\\s*$/) {\n    /*\n    Return 1 for ignorable line: iff `line` is blank or contains a single '#'.\n\n    Examples:\n\n    >>> IS_LINE_JUNK('\\n')\n    true\n    >>> IS_LINE_JUNK('  #   \\n')\n    true\n    >>> IS_LINE_JUNK('hello\\n')\n    false\n    */\n    return pat.test(line);\n  };\n\n  IS_CHARACTER_JUNK = function(ch, ws = ' \\t') {\n    /*\n    Return 1 for ignorable character: iff `ch` is a space or tab.\n\n    Examples:\n    >>> IS_CHARACTER_JUNK(' ').should.be.true\n    true\n    >>> IS_CHARACTER_JUNK('\\t').should.be.true\n    true\n    >>> IS_CHARACTER_JUNK('\\n').should.be.false\n    false\n    >>> IS_CHARACTER_JUNK('x').should.be.false\n    false\n    */\n    return indexOf.call(ws, ch) >= 0;\n  };\n\n  _formatRangeUnified = function(start, stop) {\n    var beginning, length;\n    /*\n    Convert range to the \"ed\" format'\n    */\n    // Per the diff spec at http://www.unix.org/single_unix_specification/\n    beginning = start + 1; // lines start numbering with one\n    length = stop - start;\n    if (length === 1) {\n      return `${beginning}`;\n    }\n    if (!length) { // empty ranges begin at line just before the range\n      beginning--;\n    }\n    return `${beginning},${length}`;\n  };\n\n  unifiedDiff = function(a, b, {fromfile, tofile, fromfiledate, tofiledate, n, lineterm} = {}) {\n    var file1Range, file2Range, first, fromdate, group, i1, i2, j1, j2, l, last, len, len1, len2, len3, len4, line, lines, m, o, p, q, ref, ref1, ref2, ref3, started, tag, todate;\n    /*\n    Compare two sequences of lines; generate the delta as a unified diff.\n\n    Unified diffs are a compact way of showing line changes and a few\n    lines of context.  The number of context lines is set by 'n' which\n    defaults to three.\n\n    By default, the diff control lines (those with ---, +++, or @@) are\n    created with a trailing newline.  \n\n    For inputs that do not have trailing newlines, set the lineterm\n    argument to \"\" so that the output will be uniformly newline free.\n\n    The unidiff format normally has a header for filenames and modification\n    times.  Any or all of these may be specified using strings for\n    'fromfile', 'tofile', 'fromfiledate', and 'tofiledate'.\n    The modification times are normally expressed in the ISO 8601 format.\n\n    Example:\n\n    >>> unifiedDiff('one two three four'.split(' '),\n    ...             'zero one tree four'.split(' '), {\n    ...               fromfile: 'Original'\n    ...               tofile: 'Current',\n    ...               fromfiledate: '2005-01-26 23:30:50',\n    ...               tofiledate: '2010-04-02 10:20:52',\n    ...               lineterm: ''\n    ...             })\n    [ '--- Original\\t2005-01-26 23:30:50',\n      '+++ Current\\t2010-04-02 10:20:52',\n      '@@ -1,4 +1,4 @@',\n      '+zero',\n      ' one',\n      '-two',\n      '-three',\n      '+tree',\n      ' four' ]\n\n    */\n    if (fromfile == null) {\n      fromfile = '';\n    }\n    if (tofile == null) {\n      tofile = '';\n    }\n    if (fromfiledate == null) {\n      fromfiledate = '';\n    }\n    if (tofiledate == null) {\n      tofiledate = '';\n    }\n    if (n == null) {\n      n = 3;\n    }\n    if (lineterm == null) {\n      lineterm = '\\n';\n    }\n    lines = [];\n    started = false;\n    ref = (new SequenceMatcher(null, a, b)).getGroupedOpcodes();\n    for (l = 0, len = ref.length; l < len; l++) {\n      group = ref[l];\n      if (!started) {\n        started = true;\n        fromdate = fromfiledate ? `\\t${fromfiledate}` : '';\n        todate = tofiledate ? `\\t${tofiledate}` : '';\n        lines.push(`--- ${fromfile}${fromdate}${lineterm}`);\n        lines.push(`+++ ${tofile}${todate}${lineterm}`);\n      }\n      [first, last] = [group[0], group[group.length - 1]];\n      file1Range = _formatRangeUnified(first[1], last[2]);\n      file2Range = _formatRangeUnified(first[3], last[4]);\n      lines.push(`@@ -${file1Range} +${file2Range} @@${lineterm}`);\n      for (m = 0, len1 = group.length; m < len1; m++) {\n        [tag, i1, i2, j1, j2] = group[m];\n        if (tag === 'equal') {\n          ref1 = a.slice(i1, i2);\n          for (o = 0, len2 = ref1.length; o < len2; o++) {\n            line = ref1[o];\n            lines.push(' ' + line);\n          }\n          continue;\n        }\n        if (tag === 'replace' || tag === 'delete') {\n          ref2 = a.slice(i1, i2);\n          for (p = 0, len3 = ref2.length; p < len3; p++) {\n            line = ref2[p];\n            lines.push('-' + line);\n          }\n        }\n        if (tag === 'replace' || tag === 'insert') {\n          ref3 = b.slice(j1, j2);\n          for (q = 0, len4 = ref3.length; q < len4; q++) {\n            line = ref3[q];\n            lines.push('+' + line);\n          }\n        }\n      }\n    }\n    return lines;\n  };\n\n  _formatRangeContext = function(start, stop) {\n    var beginning, length;\n    /*\n    Convert range to the \"ed\" format'\n    */\n    // Per the diff spec at http://www.unix.org/single_unix_specification/\n    beginning = start + 1; // lines start numbering with one\n    length = stop - start;\n    if (!length) { // empty ranges begin at line just before the range\n      beginning--;\n    }\n    if (length <= 1) {\n      return `${beginning}`;\n    }\n    return `${beginning},${beginning + length - 1}`;\n  };\n\n  // See http://www.unix.org/single_unix_specification/\n  contextDiff = function(a, b, {fromfile, tofile, fromfiledate, tofiledate, n, lineterm} = {}) {\n    var _, file1Range, file2Range, first, fromdate, group, i1, i2, j1, j2, l, last, len, len1, len2, len3, len4, line, lines, m, o, p, prefix, q, ref, ref1, ref2, started, tag, todate;\n    /*\n    Compare two sequences of lines; generate the delta as a context diff.\n\n    Context diffs are a compact way of showing line changes and a few\n    lines of context.  The number of context lines is set by 'n' which\n    defaults to three.\n\n    By default, the diff control lines (those with *** or ---) are\n    created with a trailing newline.  This is helpful so that inputs\n    created from file.readlines() result in diffs that are suitable for\n    file.writelines() since both the inputs and outputs have trailing\n    newlines.\n\n    For inputs that do not have trailing newlines, set the lineterm\n    argument to \"\" so that the output will be uniformly newline free.\n\n    The context diff format normally has a header for filenames and\n    modification times.  Any or all of these may be specified using\n    strings for 'fromfile', 'tofile', 'fromfiledate', and 'tofiledate'.\n    The modification times are normally expressed in the ISO 8601 format.\n    If not specified, the strings default to blanks.\n\n    Example:\n    >>> a = ['one\\n', 'two\\n', 'three\\n', 'four\\n']\n    >>> b = ['zero\\n', 'one\\n', 'tree\\n', 'four\\n']\n    >>> contextDiff(a, b, {fromfile: 'Original', tofile: 'Current'})\n    [ '*** Original\\n',\n      '--- Current\\n',\n      '***************\\n',\n      '*** 1,4 ****\\n',\n      '  one\\n',\n      '! two\\n',\n      '! three\\n',\n      '  four\\n',\n      '--- 1,4 ----\\n',\n      '+ zero\\n',\n      '  one\\n',\n      '! tree\\n',\n      '  four\\n' ]\n    */\n    if (fromfile == null) {\n      fromfile = '';\n    }\n    if (tofile == null) {\n      tofile = '';\n    }\n    if (fromfiledate == null) {\n      fromfiledate = '';\n    }\n    if (tofiledate == null) {\n      tofiledate = '';\n    }\n    if (n == null) {\n      n = 3;\n    }\n    if (lineterm == null) {\n      lineterm = '\\n';\n    }\n    prefix = {\n      insert: '+ ',\n      delete: '- ',\n      replace: '! ',\n      equal: '  '\n    };\n    started = false;\n    lines = [];\n    ref = (new SequenceMatcher(null, a, b)).getGroupedOpcodes();\n    for (l = 0, len = ref.length; l < len; l++) {\n      group = ref[l];\n      if (!started) {\n        started = true;\n        fromdate = fromfiledate ? `\\t${fromfiledate}` : '';\n        todate = tofiledate ? `\\t${tofiledate}` : '';\n        lines.push(`*** ${fromfile}${fromdate}${lineterm}`);\n        lines.push(`--- ${tofile}${todate}${lineterm}`);\n        [first, last] = [group[0], group[group.length - 1]];\n        lines.push('***************' + lineterm);\n        file1Range = _formatRangeContext(first[1], last[2]);\n        lines.push(`*** ${file1Range} ****${lineterm}`);\n        if (_any((function() {\n          var len1, m, results;\n          results = [];\n          for (m = 0, len1 = group.length; m < len1; m++) {\n            [tag, _, _, _, _] = group[m];\n            results.push(tag === 'replace' || tag === 'delete');\n          }\n          return results;\n        })())) {\n          for (m = 0, len1 = group.length; m < len1; m++) {\n            [tag, i1, i2, _, _] = group[m];\n            if (tag !== 'insert') {\n              ref1 = a.slice(i1, i2);\n              for (o = 0, len2 = ref1.length; o < len2; o++) {\n                line = ref1[o];\n                lines.push(prefix[tag] + line);\n              }\n            }\n          }\n        }\n        file2Range = _formatRangeContext(first[3], last[4]);\n        lines.push(`--- ${file2Range} ----${lineterm}`);\n        if (_any((function() {\n          var len3, p, results;\n          results = [];\n          for (p = 0, len3 = group.length; p < len3; p++) {\n            [tag, _, _, _, _] = group[p];\n            results.push(tag === 'replace' || tag === 'insert');\n          }\n          return results;\n        })())) {\n          for (p = 0, len3 = group.length; p < len3; p++) {\n            [tag, _, _, j1, j2] = group[p];\n            if (tag !== 'delete') {\n              ref2 = b.slice(j1, j2);\n              for (q = 0, len4 = ref2.length; q < len4; q++) {\n                line = ref2[q];\n                lines.push(prefix[tag] + line);\n              }\n            }\n          }\n        }\n      }\n    }\n    return lines;\n  };\n\n  ndiff = function(a, b, linejunk, charjunk = IS_CHARACTER_JUNK) {\n    /*\n    Compare `a` and `b` (lists of strings); return a `Differ`-style delta.\n\n    Optional keyword parameters `linejunk` and `charjunk` are for filter\n    functions (or None):\n\n    - linejunk: A function that should accept a single string argument, and\n      return true iff the string is junk.  The default is null, and is\n      recommended; \n\n    - charjunk: A function that should accept a string of length 1. The\n      default is module-level function IS_CHARACTER_JUNK, which filters out\n      whitespace characters (a blank or tab; note: bad idea to include newline\n      in this!).\n\n    Example:\n    >>> a = ['one\\n', 'two\\n', 'three\\n']\n    >>> b = ['ore\\n', 'tree\\n', 'emu\\n']\n    >>> ndiff(a, b)\n    [ '- one\\n',\n      '?  ^\\n',\n      '+ ore\\n',\n      '?  ^\\n',\n      '- two\\n',\n      '- three\\n',\n      '?  -\\n',\n      '+ tree\\n',\n      '+ emu\\n' ]\n    */\n    return (new Differ(linejunk, charjunk)).compare(a, b);\n  };\n\n  restore = function(delta, which) {\n    /*\n    Generate one of the two sequences that generated a delta.\n\n    Given a `delta` produced by `Differ.compare()` or `ndiff()`, extract\n    lines originating from file 1 or 2 (parameter `which`), stripping off line\n    prefixes.\n\n    Examples:\n    >>> a = ['one\\n', 'two\\n', 'three\\n']\n    >>> b = ['ore\\n', 'tree\\n', 'emu\\n']\n    >>> diff = ndiff(a, b)\n    >>> restore(diff, 1)\n    [ 'one\\n',\n      'two\\n',\n      'three\\n' ]\n    >>> restore(diff, 2)\n    [ 'ore\\n',\n      'tree\\n',\n      'emu\\n' ]\n    */\n    var l, len, line, lines, prefixes, ref, tag;\n    tag = {\n      1: '- ',\n      2: '+ '\n    }[which];\n    if (!tag) {\n      throw new Error(`unknow delta choice (must be 1 or 2): ${which}`);\n    }\n    prefixes = ['  ', tag];\n    lines = [];\n    for (l = 0, len = delta.length; l < len; l++) {\n      line = delta[l];\n      if (ref = line.slice(0, 2), indexOf.call(prefixes, ref) >= 0) {\n        lines.push(line.slice(2));\n      }\n    }\n    return lines;\n  };\n\n  // exports to global\n  exports._arrayCmp = _arrayCmp;\n\n  exports.SequenceMatcher = SequenceMatcher;\n\n  exports.getCloseMatches = getCloseMatches;\n\n  exports._countLeading = _countLeading;\n\n  exports.Differ = Differ;\n\n  exports.IS_LINE_JUNK = IS_LINE_JUNK;\n\n  exports.IS_CHARACTER_JUNK = IS_CHARACTER_JUNK;\n\n  exports._formatRangeUnified = _formatRangeUnified;\n\n  exports.unifiedDiff = unifiedDiff;\n\n  exports._formatRangeContext = _formatRangeContext;\n\n  exports.contextDiff = contextDiff;\n\n  exports.ndiff = ndiff;\n\n  exports.restore = restore;\n\n}).call(this);\n","import * as difflib from './difflib.js'\r\n\r\n\r\nvar s = new difflib.SequenceMatcher(null, 'abcd', 'bcde');\r\nconsole.log(s.ratio())\r\nconsole.log(\"Hello World\");\r\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}